name: macOS

on: [push, pull_request]

jobs:
  build:
    if: false
    name: ${{matrix.os}}-AppleClang-${{matrix.build_type}}-${{matrix.lib}}-${{matrix.components}}-${{matrix.metis}}
    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: bash
    env:
      CCACHE_DIR: ${{github.workspace}}/ccache
    strategy:
      fail-fast: true
      matrix:
        os: [macos-11, macos-12]
        build_type: [Release, Debug]
        lib: [shared, static]
        components: [minimal, lgpl, gpl]
        metis: [no-metis, metis]
        exclude:
          # METIS is only usable if CHOLMOD is compiled
          - components: minimal
            metis: metis

    steps:
    - uses: actions/checkout@v3

    - name: Setup Dependencies
      run: >-
        brew install
        ccache
        ninja

    - name: Setup METIS Dependencies
      if: ${{matrix.metis == 'metis'}}
      run: |
        brew install metis

    - name: Setup Environment
      if: ${{matrix.build_type == 'Release'}}
      run: |
        echo 'CFLAGS=-flto' >> $GITHUB_ENV
        echo 'CXXFLAGS=-flto' >> $GITHUB_ENV

    - name: Cache Build
      id: cache-build
      uses: actions/cache@v3
      with:
        path: ${{env.CCACHE_DIR}}
        key: ${{matrix.os}}-${{matrix.build_type}}-${{matrix.lib}}-${{matrix.components}}-${{matrix.metis}}-ccache-${{github.run_id}}
        restore-keys: ${{matrix.os}}-${{matrix.build_type}}-${{matrix.lib}}-${{matrix.components}}-${{matrix.metis}}-ccache-

    - name: Configure
      run: |
        cmake -S . -B build_${{matrix.build_type}}/ \
              -DBUILD_SHARED_LIBS=${{matrix.lib == 'shared'}} \
              -DCMAKE_BUILD_TYPE=${{matrix.build_type}} \
              -DCMAKE_C_COMPILER_LAUNCHER:FILEPATH=ccache \
              -DCMAKE_CXX_COMPILER_LAUNCHER:FILEPATH=ccache \
              -DCMAKE_DISABLE_FIND_PACKAGE_METIS=${{matrix.metis != 'metis'}} \
              -DCMAKE_INSTALL_PREFIX:PATH=./install \
              -DCMAKE_REQUIRE_FIND_PACKAGE_METIS=${{matrix.metis == 'metis'}} \
              -DWITH_GPL=${{matrix.components == 'gpl'}} \
              -DWITH_LGPL=${{contains(matrix.components, 'gpl')}} \
              -DWITH_METIS=${{matrix.metis == 'metis'}} \
              -G Ninja

    - name: Build
      run: |
        cmake --build build_${{matrix.build_type}}/

    - name: Install
      run: |
        cmake --build build_${{matrix.build_type}}/ \
              --target install
